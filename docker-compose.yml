version: '3.8'

services:
  ccproxy:
    build:
      context: .
      dockerfile: Dockerfile
    image: ccproxy:latest
    container_name: ccproxy
    restart: unless-stopped
    ports:
      - "3456:3456"
    environment:
      # Proxy configuration
      - CCPROXY_HOST=0.0.0.0
      - CCPROXY_PORT=3456
      - CCPROXY_LOG=true
      - CCPROXY_LOG_FILE=/home/ccproxy/.ccproxy/ccproxy.log
      
      # API key (should be set via .env file or secrets in production)
      - CCPROXY_API_KEY=${CCPROXY_API_KEY:-your-api-key-here}
      
      # Provider configuration (example)
      - CCPROXY_PROVIDERS_0_NAME=anthropic
      - CCPROXY_PROVIDERS_0_API_BASE_URL=https://api.anthropic.com
      - CCPROXY_PROVIDERS_0_API_KEY=${ANTHROPIC_API_KEY}
      - CCPROXY_PROVIDERS_0_ENABLED=true
      
      # Performance settings
      - CCPROXY_PERFORMANCE_METRICS_ENABLED=true
      - CCPROXY_PERFORMANCE_RATE_LIMIT_ENABLED=false
      - CCPROXY_PERFORMANCE_CIRCUIT_BREAKER_ENABLED=true
      
    volumes:
      # Mount config file (optional)
      - ./config.json:/home/ccproxy/.ccproxy/config.json:ro
      
      # Persist logs
      - ccproxy-logs:/home/ccproxy/.ccproxy/logs
      
      # Persist PID file and other runtime data
      - ccproxy-data:/home/ccproxy/.ccproxy
      
    networks:
      - ccproxy-net
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Optional: Add monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: ccproxy-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - ccproxy-net
    profiles:
      - monitoring

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: ccproxy-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - ccproxy-net
    profiles:
      - monitoring

volumes:
  ccproxy-logs:
  ccproxy-data:
  prometheus-data:
  grafana-data:

networks:
  ccproxy-net:
    driver: bridge